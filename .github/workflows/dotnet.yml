# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: |
         dotnet build --no-restore --configuration Release
    - name: Checkout v2fly/domain-list-community
      uses: actions/checkout@v4
      with:
        repository: v2fly/domain-list-community
        path: community
    - name: Checkout cokebar/gfwlist2dnsmasq
      uses: actions/checkout@v4
      with:
        repository: cokebar/gfwlist2dnsmasq
        path: gfwlist2dnsmasq
    - name: Generate GFWList domains
      run: |
        cd gfwlist2dnsmasq || exit 1
        chmod +x ./gfwlist2dnsmasq.sh
        ./gfwlist2dnsmasq.sh -l -o ../community/data/gfwlist
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
    - name: My
      run: |
         cd ./community/data
         ls
    - name: Run
      run: |
         dotnet ./gfwsites/bin/Release/net8.0/gfwsites.dll ./config.json ./community/data
    - name: Generate release tag
      id: tag
      run: |
        touch release.txt
        echo "$(date +"%Y.%m.%d-%H%M")" >> release.txt
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
        cd save
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 3
        keep_minimum_runs: 5
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
